new Module("Utils")
.setAuthor("Gorlem, updated by spthiel")
.setDescription("This module adds a lot of random things which don't deserve their own module.")
.addAction("&result = TRIM(%&string%)","Removes whitespace from the beginning and the end")
.addAction("SHUFFLE(array[])","Shuffles an array")
.addEvent("onDeath","Triggers when the player dies")
.addEvent("onRespawn","Triggers when the user respawns")
.addEvent("onPotionEffect","Triggers when a potioneffect is applied. Possible variables: %NEWEFFECTID% %NEWEFFECT% %NEWEFFECTNAME% %NEWEFFECTPOWER% %NEWEFFECTTIME%")
.addIterator("actions","Iterates over a list of all actions. Possible variables: %ACTIONNAME% %ACTIONUSAGE% %ACTIONRETURN% %ACTIONDESCRIPTION%")
.addIterator("events","Iterates over a list of all events. Possible variables: %EVENTNAME% %EVENTID% %EVENTHELP[]%")
.addIterator("iterators","Iterates over a list of all iterators. Possible variables: %ITERATORNAME%")
.addChangelog(26,"15/nov/19")
    .addLine("Updated to API 26")
    .build()
.addChangelog(17,null)
    .addLine("Initial release")
    .build()
.addDownload(17,"http://modules.gorlem.ml/download/0BxhkVZpaJtV3QjBZMWQ0X2NnWUE")
.addDownload(26,"https://www.dropbox.com/s/42de5v4sq2alpdg/module_utils-1.0-26.1-0.15.4-mc1.12.1.jar?dl=0");

new Module("Documentor")
.setAuthor("spthiel")
.setDescription("Let's you create custom or replace existing documentation entries for macromod")
.addAction("ADDDOCS(<name of entry>,[usage],[description],[return type])","Adds documentation to an action")
.addAction("&docs[] = LISTDOCS([name])","Returns the documentation of the action")
.addChangelog(26,"02/nov/18")
    .addLine("Initial release")
    .build()
.addDownload(26,"https://cdn.discordapp.com/attachments/505815454468800517/507896476681371658/module_documentorAPI-0.1-26.1-0.15.4-mc1.12.1.jar");

new Module("NotEnoughInformation")
.setAuthor("spthiel")
.setDescription("Adds useful functionality to existing functions, fileio, http requests, json parsing and a few fixes for macromod")
.addAction("calcyawto(<xpos>,<ypos>,<zpos>,[#yaw],[#dist],[#pitch])","Added optional Z argument for pitch calculations")
.addAction("for(#i,<start>,<end>,<step>)","Fixed - step now working")
.addAction("getslotitem(<slotid>,<&itemid>,[#stacksize],[#datavar],[&nbt])","Added optional nbt argument")
.addAction("gui(<gui>)","Fixed - now supports variables")
.addAction("showgui(<gui>)","Fixed - now supports variables")
.addAction("logto(<file>,<str>)","Altered - now supports relative and absolute paths")
.addAction("look/looks","Fixed - now supports spaces")
.addAction("placesign([line1],[line2],[line3],[line4])","Altered - removed last argument")
.addAction("&response = http([GET|POST|PUT|DELETE],<url>,[output stream],[headers])","Creates a http request")
.addAction("iffileexists(<path>,[expression if file should be created if missing])","checks if a file exists, files can start with ~ to be relative to minecraft directory")
.addAction("mkdir(<path>)","creates directory, files can start with ~ to be relative to minecraft directory")
.addAction("<&content[]> = readfile([&content[]],<path>)","Reads file into array, files can start with ~ to be relative to minecraft directory")
.addAction("writefile(<&array[]>,<path>,[append])","Writes array to file, files can start with ~ to be relative to minecraft directory")
.addAction("&array[] = getjsonasarray(<json>,[format])","Returns json as key:value array or optionally using a custom format $key being replaced by the key, $value by the value")
.addAction("&keys[] = getjsonkeys(<json>)","Retuns a list of the keys of the json")
.addAction("&object = jsonget(<key>,<json>)","Retuns the object of the key of the specified json")
.addAction("sort([ASC,DSC],<array[]>,[array[]],...)","Sorts the arrays synchronously")
.addAction("<&members[]|&teams[]> = teammembers([team])","Lists all the members of a scoreboard team or a list of all the teamnames")
.addAction("<&score|&scores[]|&obectives[]> = score([Objectivename],[playername])","Returns score of player in objective or score of all players in objective or list of objectivenames")
.addAction("exec(<file.txt>,[taskname],[params],...)","Fixed multiple issues with arguments")
.addAction("countdownto(<until>)","Creates a countdown to the specified datetime. Time has to be in format hh:mm:ss and Date has to be in format yyyy-MM-dd only one of both is required")
.addAction("countdownfrom(<start>)","Creates a countdown from the specified time. Time has to be in format hh:mm:ss")
.addAction("countup()","Creates a countup from the current time")
.addAction("counter(<id>)","Gives the current value of the countdown or countup with the id (value returned from the functions)")
.addAction("&time = secToTime(<seconds>,[format])","Formats the amount of seconds to time")
.addAction("#sec = timeToSec(<hh:mm:ss|hour>,[minute],[seconds])","Returns count of seconds of the specified time")
.addIterator("foreach(\"players\")","[a]https://spthiel.github.io/NotEnoughInformation/[/a]")
.addIterator("foreach(\"teams\")","[a]https://spthiel.github.io/NotEnoughInformation/[/a]")
.addIterator("foreach(\"objectives\")","[a]https://spthiel.github.io/NotEnoughInformation/[/a]")
.addIterator("foreach(\"scores\")","[a]https://spthiel.github.io/NotEnoughInformation/[/a]")
.addVariable("LATENCY", "Ping of the player to the server")
.addVariable("HACKED", "Whether all the functions of the module have been applied to the client")
.addVariable("MODULENEI", "True when the module is installed")
.addVariable("MINECRAFTDIR", "Filepath of the current minecraft directory")
.addVariable("MACROSCONFIGDIR", "%MINECRAFTDIR%/.liteconfig/common/macros")
.addVariable("FILESEPERATOR", "Default path seperator used by the system")
.addDownload(26, "./modules/nei/module_NotEnoughInformation-0.9.4-26.1-0.15.4-mc1.12.1.jar", "0.9.4")
.addChangelog(26,"10/dec/19")
    .addLine("Fixed iffileexists")
    .addLine("Fixed readfile")
    .build()
.addChangelog(26,"03/dec/19")
    .addLine("Fixed jsonget")
    .addLine("Added optional argument to getjsonasarray for the format")
    .addLine("Added LATENCY")
    .build()
.addChangelog(26,"30/nov/19")
    .addLine("Renamed countdown to countdownto")
    .addLine("Added countdownfrom")
    .addLine("Added secToTime and timeToSec")
    .build()
.addChangelog(26,"24/nov/19")
    .addLine("Added countdown, countup and counter")
    .addLine("Added leftpad")
    .build()
.addChangelog(26,"24/nov/19")
    .addLine("Added fix for exec")
    .build()
.addChangelog(26,"15/nov/19")
    .addLine("Updated")
    .build()
.addChangelog(17)
    .addLine("Initial release")
    .build();

new Module("FileIO")
.setAuthor("Astrorious")
.setDescription("FileIO is a simple Module designed to make reading and writing files easier/possible.")
.addAction("FILEEXISTS(<&path>)","Returns whether the file exists")
.addAction("MKDIR(<&path>)","Creates the directory for the path")
.addAction("WRITEFILE(<&path>,<&towrite[],[append])","Writes data to the file")
.addVariable("%MINECRAFTDIR","Path of the current minecraft directory")
.addVariable("%MACROSCONFIGDIR","Path of the current macros config directory")
.addVariable("FILESEPERATOR","Character used to split directories in paths")
.addDownload(26,"https://www.dropbox.com/s/480crujdd1qzb63/module_fileio_macrokeybind_API_26.jar?dl=1")
.addChangelog(26,"01/aug/18")
    .addLine("Initial release")
    .addLine("Added FILEEXISTS script action")
    .addLine("Added MKDIR script action")
    .addLine("Added READFILE script action")
    .addLine("Added WRITEFILE script action")
    .addLine("Added MINECRAFTDIR global variable")
    .addLine("Added MACROSCONFIGDIR global variable")
    .addLine("Added FILESEPARATOR global variable")
    .build();

new Module("WindowsNotifications")
.setAuthor("spthiel")
.setDescription("Display windows system notifications with a simple command.")
.addAction("NOTIFY([title],[message])","Creates a system tray")
.addDownload(26,"./modules/windowsnotifications/module_notifications-1.0-26.1-0.15.4-mc1.12.1.jar")
.addChangelog(26)
    .addLine("Initial release")
    .build();

new Module("GetSlotItemExtended")
.setAuthor("Seferan")
.setDescription("This module provides extended versions of GetSlotItem")
.addAction("[&itemid =] getslotitemext(<#slotid>,[itemid],[stackSize],[damage],[itemname])","Adds argument for the itemname of the item in specified slot")
.addAction("[&itemid =] getslotitemnbt(<#slotid>,[itemid],[stackSize],[damage],[nbt])","Adds argument for the nbt of the item in specified slot")
.addAction("[&itemid =] getslotitemenchants(<#slotid>,[itemid],[stackSize],[damage],[enchants])","Adds argument for the enchantments of the item in specified slot")
.addDownload(26,"./modules/getslotitemext/module_GetSlotItemExtended-0.4-26.1-0.15.4-mc1.12.1.jar")
.addChangelog(26)
    .addLine("Initial release")
    .build();

new Module("JSON")
.setAuthor("xaero_")
.setDescription("This module parses and allows you to walk JSON-encoded strings without a prior knowledge of its structure.")
.addAction("[bool] = IsBoolean(<string>,[bool])","Checks if the value is a boolean")
.addAction("[bool] = IsFloat(<string>,[bool])","Checks if the value is a float")
.addAction("[bool] = IsInteger(<string>,[bool])","Checks if the value is a integer")
.addAction("[bool] = IsJsonArray(<string>,[bool])","Checks if the value is a JSON array")
.addAction("[bool] = IsJsonObject(<string>,[bool])","Checks if the value is a JSON object")
.addAction("[bool] = IsJsonPrimitive(<string>,[bool])","Checks if the value is a JSON primitive")
.addAction("[bool] = IsNumber(<string>,[bool])","Checks if the value is a number")
.addAction("[bool] = IsString(<string>,[bool])","Checks if the value is a string")
.addAction("[&output] = jsonadd(<json>,<key>,<value>,[&output])","Adds key and value to the json")
.addAction("[&output] = jsonget(<json>,<key>,[&output])","Gets value of a key")
.addAction("[bool] = jsonhas(<json>,<key>,[bool])","Returns if the json contains the key")
.addAction("[&output] = jsonremove(<json>,<key>,[&output])","Removes a key-value-pair from the json")
.addAction("[&keys] = getjsonkeys(<json>,[&keys[]])","Returns a list of all the keys of the json")
.addAction("[&array] = getjsonasarray(<json>,[&array[]]))","Returns json as key:value array")
.addAction("[&jsonarray] = jsonarrayadd(<jsonarray>,<element>,[&jsonarray])","Adds an element to the json array")
.addAction("[&output] = jsonarrayget(<jsonarray>,<index>,[&output])","Returns the element of the jsonarray")
.addAction("[#size] = jsonarraysize(<jsonarray>,[#size])","Returns the size of the jsonarray")
.addVariable("%MODULEJSON%","Returns true if the module is installed")
.addDownload(17,"./modules/json/module_json_api17_v0.1.jar")
.addDownload(24,"./modules/json/module_json_api24_v0.1.jar")
.addDownload(26,"./modules/json/module_json_api26_v0.1.jar")
.addChangelog(26, "25/aug/17")
    .addLine("Removed beta label")
    .build()
.addChangelog(15, "28/feb/14")
    .addLine("Initial release")
    .build();

new Module("Clipboard")
.setAuthor("xaero_")
.setDescription("This module adds clipboard functions to read and write from the system clipboard.")
.addAction("GETCLIPBOARD([&text])","Returns content of clipboard")
.addAction("SETCLIPBOARD(<text>)","Sets the clipboard text")
.addVariable("MODULECLIPBOARD","Returns true if the module is installed")
.addDownload(17,"./modules/clipboard/module_clipboard-api17_v0.1.jar")
.addDownload(24,"./modules/clipboard/module_clipboard-api24_v0.1.jar")
.addDownload(26,"./modules/clipboard/module_clipboard-api26_v0.1.jar")
.addChangelog(15,"22/feb/14")
    .addLine("Initial release")
    .build();

new Module("HTTP")
.setAuthor("xaero_")
.setDescription("This module is a bastardized HTTP client that allows you to fetch web resources into your macro, or upload some data to a server.")
.addAction("[&response[]] = HTTPGET(<url>,<query>,<#status>,[&response])","Performs a httpget request to specified url")
.addAction("[&response[]] = HTTPPOST(<url>,<data>,<#status>,[&response])","Performs a httppost request to specified url with the data")
.addAction("[&response[]] = HTTPPUT(<url>,<data>,<#status>,[&response])","Performs a httpput request to specified url with the data")
.addAction("[&response[]] = HTTPDELETE(<url>,<query>,<#status>,[&response])","Performs a httpdelte request to specified url")
.addAction("[&output] = URLENCODE(<string>,[&output])","URL Encodes the string")
.addAction("SETREQUESTHEADER(<&field>,<&value>)","Sets a request header for the next request")
.addVariable("%MODULEHTTP%","Returns true if the module is installed")
.addDownload(17,"./modules/http/module_http_api17_v0.2.jar")
.addDownload(24,"./modules/http/module_http_api24_v0.2.jar")
.addDownload(26,"./modules/http/module_http_api26_v0.2.jar")
.addChangelog(26,"25/aug/17")
    .addLine("Added SETREQUESTHEADER action")
    .build()
.addChangelog(15,"22/feb/14")
    .addLine("Added MODULEHTTP environment variable")
    .build()
.addChangelog(13,"17/oct/13")
    .addLine("Initial release")
    .build();

new Module("SignText")
.setAuthor("xaero_")
.setDescription("This module allows you to retrieve the sign text from a sign you're hitting, or with absolute coordinates. Also in single player, it will allow you to change the sign text without breaking it.")
.addAction("[&outarray] = GETHITSIGNTEXT([&outarray])","Returns signtext of the sign in view")
.addAction("[&outarray] = GETSIGNTEXT(<x>,<y>,<z>,[&outarray])","Returns signtext of sign at absolute coordinates")
.addAction("SETSIGNTEXT(<x>,<y>,<z>,<line1>,<line2>,<line3>,<line4>)","In singleplayer set text of sign")
.addVariable("%MODULESIGNTEXT%","Returns true if the module is installed")
.addDownload(17,"./modules/signtext/module_signtext_api17_v0.2.2.jar")
.addDownload(24,"./modules/signtext/module_signtext_api24_v0.2.2.jar")
.addDownload(26,"./modules/signtext/module_signtext_api26_v0.2.2.jar")
.addChangelog(26,"25/aug/17")
    .addLine("Removed GETHITSIGNTEXT since it's built-in to the main mod now")
    .build()
.addChangelog(16,"01/sep/14")
    .addLine("Added MODULESIGNTEXT environment variable")
    .build()
.addChangelog(13,"17/oct/2013")
    .addLine("Array parameter is optional and is overwritten if there was a sign")
    .addLine("Text is returned for assignment")
    .addLine("Added SETSIGNTEXT for singleplayer")
    .build()
.addChangelog(12)
    .addLine("Initial release")
    .build();

new Module("FarHit")
.setAuthor("xaero_")
.setDescription("This module adds a few environmental variables that extends almost all the HIT* variables into the distance.")
.addVariable("%FARHIT%","Same as %HIT% but extended reach")
.addVariable("%FARHITID%","Same is %HITID% but extended reach")
.addVariable("%FARHITDATA%","Same as %HITDATA% but extended reach")
.addVariable("%FARHITNAME%","Same is %HITNAME% but extended reach")
.addVariable("%FARHITSIDE%","Same as %HITSIDE% but extended reach")
.addVariable("%FARHITX%","Same is %HITIX% but extended reach")
.addVariable("%FARHITY%","Same as %HITY% but extended reach")
.addVariable("%FARHITZ%","Same is %HITZ% but extended reach")
.addVariable("%FARHITUUID%","Same is %HITUUID% but extended reach")
.addVariable("%FARHITDIST%","Distance to block")
.addVariable("%MDULEFARHIT%","Distance to block")
.addDownload(17,"./modules/farhit/module_farhit_api17_v0.1.3.jar")
.addChangelog(17,"27/jan/15")
    .addLine("Preliminary update (missing HIT properties)")
    .addLine("Added FARHITUUID for players")
    .build()
.addChangelog(16,"01/sep/14")
    .addLine("Added MODULEFARHIT environment variable")
    .build()
.addChangelog(13,"17/oct/13")
    .addLine("Removed deprecated function")
    .build()
.addChangelog(12,"19/aug/13")
    .addLine("Initial release")
    .build();
